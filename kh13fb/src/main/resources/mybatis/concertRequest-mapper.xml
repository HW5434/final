<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
    <mapper namespace="concertRequest">
		
    	
    	
    	<select id="sequence" resultType="int">
    		select concert_request_seq.nextval from dual
    	</select>
    	
    	<select id="list" resultType="ConcertRequestDto">
			select * from concert_request order by concert_request_no asc
		</select>
		
		<!-- 정보값추가-->
		<insert id="register">
			insert into concert_request(
				concert_request_no, concert_request_company_name, concert_request_company_number, 
				concert_request_representative, concert_request_manager, concert_request_address, 
				concert_request_office_number, concert_request_phone_number, concert_request_email, 
				concert_request_fax, concert_request_concert_name, concert_request_concert_genre, 
				concert_request_age, concert_request_runtime_first,  concert_request_intermission, 
				concert_request_runtime_second, concert_request_head_day, concert_request_footer_day, 
				concert_request_readyh_day, concert_request_readyf_day, concert_request_starth_day, 
				concert_request_startf_day, concert_request_withdrawh_day, concert_request_withdrawf_day, 
				concert_request_seatvip, concert_request_seatr, concert_request_seats, concert_request_seata, 
				concert_request_state
			)
				values(#{concertRequestNo}, #{applicant.concertRequestCompanyName}, 
							#{applicant.concertRequestCompanyNumber}, #{applicant.concertRequestRepresentative}, 
							#{applicant.concertRequestManager}, #{applicant.concertRequestAddress}, #{applicant.concertRequestOfficeNumber}, 
							#{applicant.concertRequestPhoneNumber}, #{applicant.concertRequestEmail}, #{applicant.concertRequestFax}, 
							#{concert.concertRequestConcertName}, #{concert.concertRequestConcertGenre}, #{concert.concertRequestAge}, 
							#{concert.concertRequestRuntimeFirst}, #{concert.concertRequestIntermission}, #{concert.concertRequestRuntimeSecond}, 
							#{rent.concertRequestHeadDay}, #{rent.concertRequestFooterDay}, #{rent.concertRequestReadyhDay}, 
							#{rent.concertRequestReadyfDay}, #{rent.concertRequestStarthDay}, #{rent.concertRequestStartfDay}, 
							#{rent.concertRequestWithdrawhDay}, #{rent.concertRequestWithdrawfDay}, #{concert.concertRequestSeatvip}, 
							#{concert.concertRequestSeatr}, #{concert.concertRequestSeats}, #{concert.concertRequestSeata}, #{rent.concertRequestState}
							)
		</insert>
		
		<select id="find" resultType="concertRequestDto">
     	   select * from concert_request where concert_request_no = #{concertRequestNo}
  	  </select>
    
	<!-- 지혜 - State값 조회하는 구문 -->
   	<select id="selectByState" resultType="concertRequestDto">
			SELECT * FROM concert_request WHERE concert_request_state  = 'y'
	</select>
    
    
    	<!-- 지혜 -->
    	<update id="editUnit">
  			  update concert_request
        	<set> 
        		concert_request_state = #{concertRequestState},
        		concert_request_no = #{concertRequestNo}
    		</set>
    			where concert_request_no = #{concertRequestNo}
		</update>
    
    	<delete id="delete">
    		delete concert_request where concert_request_no = #{concertRequestNo}
    	</delete>
    	
    <insert id="saveSchedule">
    insert into concert_schedule (
        concert_schedule_no,
        concert_schedule_start,
        concert_schedule_end,
        concert_request_no
    )
    values (
        #{concertScheduleNo},
        #{concertScheduleStart},
        #{concertScheduleEnd},
        #{concertRequestNo}
    )
    </insert>
    
    
    
    
    </mapper>